BASE <https://w3id.org/kgviz/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX gv: <https://w3id.org/kgviz/graphviz/>


<Node> xsd:string

linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

gv:Color xsd:string

<AnyConfiguration> CLOSED {
    (  $<AnyConfiguration_tes> (  &<ElementConfiguration_tes> ;
          rdf:type [ <ElementConfiguration> ] ? ;
          &<NodeProperty_tes> ;
          rdf:type [ <NodeProperty> ] ? ;
          &<EdgeProperty_tes> ;
          rdf:type [ <EdgeProperty> ] ? ;
          <https://graphviz.org/doc/info/attrs.html#d:penwidth> @linkml:Integer ? ;
          gv:label @linkml:String ? ;
          <https://graphviz.org/doc/info/attrs.html#d:color> @gv:Color ? ;
          gv:fontcolor @gv:Color ? ;
          gv:arrowhead @gv:ArrowType ? ;
          gv:arrowtail @gv:ArrowType ?
       ) ;
       rdf:type [ <AnyConfiguration> ] ?
    )
}

gv:ClusterSubgraphAspect {
    (  $gv:ClusterSubgraphAspect_tes (  &gv:GraphvizAspect_tes ;
          rdf:type [ gv:GraphvizAspect ] ?
       ) ;
       rdf:type [ gv:ClusterSubgraphAspect ] ?
    )
}

<Condition> CLOSED {
    (  $<Condition_tes> (  <type> @linkml:String ? ;
          <subset> @linkml:String ?
       ) ;
       rdf:type [ <Condition> ] ?
    )
}

<ConditionalProperty> CLOSED {
    (  $<ConditionalProperty_tes> (  gv:fillcolor @gv:Color ? ;
          <conditions> @<Condition> ? ;
          <properties> @<AnyConfiguration> ?
       ) ;
       rdf:type [ <ConditionalProperty> ] ?
    )
}

gv:EdgeAspect {
    (  $gv:EdgeAspect_tes (  &gv:GraphvizAspect_tes ;
          rdf:type [ gv:GraphvizAspect ] ?
       ) ;
       rdf:type [ gv:EdgeAspect ] ?
    )
}

<EdgeProperty> {
    (  $<EdgeProperty_tes> (  &<GeneralProperty_tes> ;
          rdf:type [ <GeneralProperty> ] ? ;
          gv:arrowhead @gv:ArrowType ? ;
          gv:arrowtail @gv:ArrowType ?
       ) ;
       rdf:type [ <EdgeProperty> ] ?
    )
}

<ElementConfiguration>  (
    @<AnyConfiguration> OR @<PrefixConfiguration> OR @<RelationConfiguration>
)

<ElementConfiguration_struct> {
    (  $<ElementConfiguration_tes> rdf:type . * ;
       rdf:type [ <ElementConfiguration> ] ?
    )
}

<GeneralProperty>  (
    @<EdgeProperty> OR @<NodeProperty>
)

<GeneralProperty_struct> {
    (  $<GeneralProperty_tes> (  <https://graphviz.org/doc/info/attrs.html#d:penwidth> @linkml:Integer ? ;
          gv:label @linkml:String ? ;
          gv:fontcolor @gv:Color ?
       ) ;
       rdf:type [ <GeneralProperty> ] ?
    )
}

gv:GraphvizAspect  (
    @gv:ClusterSubgraphAspect OR @gv:EdgeAspect OR @gv:NodeAspect OR @gv:RootGraphAspect OR @gv:SubgraphAspect
)

gv:GraphvizAspect_struct {
    (  $gv:GraphvizAspect_tes rdf:type . * ;
       rdf:type [ gv:GraphvizAspect ] ?
    )
}

gv:NodeAspect {
    (  $gv:NodeAspect_tes (  &gv:GraphvizAspect_tes ;
          rdf:type [ gv:GraphvizAspect ] ?
       ) ;
       rdf:type [ gv:NodeAspect ] ?
    )
}

<NodeProperty> {
    (  $<NodeProperty_tes> (  &<GeneralProperty_tes> ;
          rdf:type [ <GeneralProperty> ] ? ;
          <https://graphviz.org/doc/info/attrs.html#d:color> @gv:Color ?
       ) ;
       rdf:type [ <NodeProperty> ] ?
    )
}

<PrefixConfiguration> CLOSED {
    (  $<PrefixConfiguration_tes> (  &<ElementConfiguration_tes> ;
          rdf:type [ <ElementConfiguration> ] ? ;
          &<NodeProperty_tes> ;
          rdf:type [ <NodeProperty> ] ? ;
          gv:fillcolor @gv:Color ? ;
          <https://graphviz.org/doc/info/attrs.html#d:penwidth> @linkml:Integer ? ;
          gv:label @linkml:String ? ;
          <https://graphviz.org/doc/info/attrs.html#d:color> @gv:Color ? ;
          gv:fontcolor @gv:Color ?
       ) ;
       rdf:type [ <PrefixConfiguration> ]
    )
}

<RelationConfiguration> CLOSED {
    (  $<RelationConfiguration_tes> (  &<ElementConfiguration_tes> ;
          rdf:type [ <ElementConfiguration> ] ? ;
          &<EdgeProperty_tes> ;
          rdf:type [ <EdgeProperty> ] ? ;
          <https://graphviz.org/doc/info/attrs.html#d:color> @gv:Color ? ;
          <https://graphviz.org/doc/info/attrs.html#d:penwidth> @linkml:Integer ? ;
          gv:label @linkml:String ? ;
          gv:fontcolor @gv:Color ? ;
          gv:arrowhead @gv:ArrowType ? ;
          gv:arrowtail @gv:ArrowType ?
       ) ;
       rdf:type [ <RelationConfiguration> ]
    )
}

gv:RootGraphAspect {
    (  $gv:RootGraphAspect_tes (  &gv:GraphvizAspect_tes ;
          rdf:type [ gv:GraphvizAspect ] ?
       ) ;
       rdf:type [ gv:RootGraphAspect ] ?
    )
}

<StyleSheet> CLOSED {
    (  $<StyleSheet_tes> (  gv:style @gv:StyleType ? ;
          gv:styles @gv:StyleType * ;
          gv:fillcolor @gv:Color ? ;
          gv:labelFrom @linkml:String ? ;
          <highlightIds> @<Node> * ;
          <displayAnnotations> @<Node> * ;
          <cliqueRelations> @<Node> * ;
          <containmentRelations> @<Node> * ;
          <reasoning> @<ReasoningType> * ;
          <excludeSingletons> @linkml:Boolean ? ;
          <relationProperties> @<RelationConfiguration> * ;
          <prefixProperties> @<PrefixConfiguration> * ;
          <conditionalProperties> @<ConditionalProperty> * ;
          <nodeFilter> @<Condition> ?
       ) ;
       rdf:type [ <StyleSheet> ] ?
    )
}

gv:SubgraphAspect {
    (  $gv:SubgraphAspect_tes (  &gv:GraphvizAspect_tes ;
          rdf:type [ gv:GraphvizAspect ] ?
       ) ;
       rdf:type [ gv:SubgraphAspect ] ?
    )
}


